Clone the repository using git clone:

>> git clone https://github.com/timjar3/DevOps_ClassNotes.git

>> cd standard/

Install the metric server, which can be found in the k8 doc site.

>> kubectl create -f . ( runs all the yaml files in that directory )

it collects all the metrics and logs.

********* time to install Prometheus ********************
#### note:
1. We can install Promtetheus in desktop or even in windows.
2. the above promethus.yml file will be installed inside the docker to install inside form of container or pod.
3. Docker site has respective images for all monitoring, prometheus, grafana, Nagios, Datadog etc.
4. K8 has their own exclusive Prometheus and grafana yml file which could be used (prom/prometheus), ( they are products of google )

Go through the promtheus.yml file.....(important)

It has its own namespace called monitoring.

kubectl get all -n monitoring

>>output

g309mugetsu@cloudshell:~/DevOps_ClassNotes/Kubernetese/Monitoring (dockerorc)$ k get all -n monitoring

NAME                                         READY   STATUS    RESTARTS   AGE
pod/prometheus-deployment-58f6fb464b-cr4xf   1/1     Running   0          4m37s

NAME                         TYPE       CLUSTER-IP   EXTERNAL-IP   PORT(S)          AGE
service/prometheus-service   NodePort   10.72.8.69   <none>        8080:30423/TCP   4m35s

NAME                                    READY   UP-TO-DATE   AVAILABLE   AGE
deployment.apps/prometheus-deployment   1/1     1            1           4m37s

NAME                                               DESIRED   CURRENT   READY   AGE
replicaset.apps/prometheus-deployment-58f6fb464b   1         1         1       4m37s

*******note all running********* : Pod, Services, deployment, replicaset as per yml file.


note the port nuber on the pod and find any of the public IP of the nodes in cluster and check if the port is open. 

on the browser:

to find the public IP:

two ways: 
1. >> kubectl get nodes -o wide
 check the external IP of any of the nodes

2. navigate google instance check any of then nodes and their respective IPs.


***************** Prometheus is Data collector, it is a Query tool to fetch logs and info about K8 clusters *********************

Grafana is a dashboard creator which had good garphs and other metric indicators to showcase which fetched data from Prometheus

############  Grafana #################

you can run grafana on any machine:

here we are running on my localhost machine which is not connected to the cluster in anyway.


>> docker run -d --name grafana -p 3000:3000 grafana/grafana

access the app using external Ip address and port number 3000

here  http://localhost:3000/ or your private IP+portnumber


just givee admin admin for access.

****note this is not open source and is free for only few days ********

go to the dashboard:

under > setting > source > prometheus : Ip Server > add the external IP of the promethus server plus the port number

Eg:  http://34.123.117.158:30423/


Scroll and to Save and test:


Scroll to dashboard creating and check from the grafan website for free dashboards:
copy past the ID or the name to import and check the metrics:


we can add query like Sum(pods...as.da.s.d.ad) by adding panels and more


but noramlly we use the readily availbe dashboards which can be imported:
>> click +

>> Import to get dashboards

one of the comman dashboards used and their ID  :   6417 & 1000  press import with Promotheus source.


>> kubectl top nodes
>> kubectl top pods

you can verify this with the dashboards to masternode commands.

***************************************************

using K8 inbuilt dashboard k8 GUI:

using the insecure way wihout any RBAC (role based access or configuration). 

https://github.com/timjar3/DevOps_ClassNotes/blob/master/Kubernetese/dashboard-insecure.yml



Inside the cluster using the master node:

>> kubectl create -f https://github.com/timjar3/DevOps_ClassNotes/blob/master/Kubernetese/dashboard-insecure.yml

if you get error clone the repo to local and CD to K8 dir and run the yml file.




you can acces the dashboard from the new k8 dashboard node port:

>> kubectl get all


>>Output 



g309mugetsu@cloudshell:~/DevOps_ClassNotes/Kubernetese (dockerorc)$ k get all
NAME                                             READY   STATUS    RESTARTS   AGE
pod/dashboard-metrics-scraper-778b77d469-647nt   1/1     Running   0          107s
pod/kubernetes-dashboard-654b7f5d46-d29h5        1/1     Running   0          107s

NAME                                TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)        AGE
service/dashboard-metrics-scraper   ClusterIP   10.72.15.242   <none>        8000/TCP       108s
service/kubernetes                  ClusterIP   10.72.0.1      <none>        443/TCP        3h57m
service/kubernetes-dashboard        NodePort    10.72.15.144   <none>        80:32488/TCP   109s     ********************* %%%%%%%%%%%%
                                    ************************
                                    %%%%%%%%%%%%%%%%%%%%%%%
NAME                                        READY   UP-TO-DATE   AVAILABLE   AGE
deployment.apps/dashboard-metrics-scraper   1/1     1            1           107s
deployment.apps/kubernetes-dashboard        1/1     1            1           108s

NAME                                                   DESIRED   CURRENT   READY   AGE
replicaset.apps/dashboard-metrics-scraper-778b77d469   1         1         1       108s
replicaset.apps/kubernetes-dashboard-654b7f5d46        1         1         1       108s



>> use any of the nodes external IP with the port number of the K8 dashboard service from the above

Eg: 
http://34.123.117.158:32488/


once its runnin

Use Skip:


Use Cases:

1. you can share this URL with permission to anu stakeholder of deployment.

2. you can explore all kinds of feature and current status of the pods

3. you can also run yaml and creat yaml files using the " + " icon in the top right corner


***********



















